<?xml version="1.0" encoding="UTF-8"?>
<ConvQ_Session_Prompts>
    <metadata>
        <purpose>Ready-to-use prompts for new context windows</purpose>
        <usage>Copy and paste the appropriate prompt for your session</usage>
    </metadata>

    <!-- Universal Start Prompt -->
    <universal_prompt>
        <n>Use This to Start ANY Session</n>
        <prompt><![CDATA[
I'm continuing work on refactoring my Conv(ℚ) essays to include substantial mathematical proofs and structures. I have a Neo4j database with the complete Conv(ℚ) framework (100% complete, 100 areas conquered).

Please help me with Session [NUMBER] of the refactoring plan. First, let's:

1. Load the refactor plan and check progress:
```cypher
MATCH (plan:EssayRefactorPlan {name: "Conv(ℚ) Essay Enhancement Plan - Academic Presentation"})
MATCH (tracker:TaskTracker {name: "Essay Refactor Progress"})
MATCH (plan)-[:HAS_SESSION]->(s:RefactorSession {session_number: [NUMBER]})
RETURN plan, tracker, s
```

2. Load the relevant XML artifacts for this session:
- ConvQ_01_Formal_Definitions.xml
- ConvQ_02_Major_Theorems.xml
- ConvQ_03_Eliminations.xml
- ConvQ_04_Quantum_Physics.xml
- ConvQ_05_Computations.xml
- ConvQ_06_Consciousness_Advanced.xml
- ConvQ_Session_Management.xml

3. Load the specific essay file we're working on: [FILENAME]

Key principle: Present substantial mathematics with academic rigor, letting the proofs speak for themselves. No hyperbole - just solid mathematical content.
        ]]></prompt>
    </universal_prompt>

    <!-- Session-Specific Prompts -->
    <session_prompts>

        <session_1_introduction><![CDATA[
I'm starting Session 1: Refactoring the Introduction (00_Introduction.md).

Goals:
1. Add formal Conv operator definition
2. Include overview of 100 conquered areas
3. Add concrete theorem examples
4. Maintain humble but confident tone

Please help me:
- Query the database for key definitions and area count
- Integrate content from ConvQ_01_Formal_Definitions.xml
- Draft revised introduction sections

Let's start by loading the current introduction and the formal definitions.
        ]]></session_1_introduction>

        <session_2_two_sins><![CDATA[
I'm working on Session 2: Enhancing "The Two Sins" essay with mathematical evidence.

Goals:
1. Add pairing function π(a,b) = (a+b)² + 3a + b
2. Show set theory reduction to ℚ-arithmetic
3. Include proof sketches for continuity via convergence
4. Present as mathematical discoveries, not attacks

Please help me:
- Load content from ConvQ_03_Eliminations.xml#set-theory
- Query database for ZFC axiom reductions
- Integrate proofs while maintaining philosophical narrative

Start by loading 01_The_Two_Sins.md and the elimination structures.
        ]]></session_2_two_sins>

        <session_3_foundations><![CDATA[
I'm on Session 3: Expanding Constructive Foundations with formal mathematics.

Goals:
1. Add complete formal system definitions
2. Include convergence rate theorems
3. Show category theory as ℚ-graphs
4. Add HoTT interpretation

Please integrate:
- All of ConvQ_01_Formal_Definitions.xml
- Category structures from database (areas 81-85)
- Measure theory and topology theorems

Query for category theory formulations and density theorems.
        ]]></session_3_foundations>

        <session_4_pure_math><![CDATA[
Session 4: Adding proven theorems to Pure Mathematics essay.

Goals:
1. Include Cauchy and Residue theorem proofs
2. Add Langlands correspondence in ℚ
3. Show algebraic topology via ℚ
4. Include differential geometry

Please:
- Load all content from ConvQ_02_Major_Theorems.xml
- Query areas 86-90 for Langlands and motives
- Focus on concrete mathematical achievements

Show how classical results appear in Conv(ℚ).
        ]]></session_4_pure_math>

        <session_5_applied><![CDATA[
Session 5: Enhancing Applied Mathematics with implementations.

Goals:
1. Add neural network training in ℚ
2. Include quantum algorithms (Shor, Grover)
3. Show numerical methods preserve ℚ
4. Add cryptography examples

Load:
- ConvQ_05_Computations.xml (all sections)
- Query computational examples from database
- Include performance comparisons

Emphasize practical computability.
        ]]></session_5_applied>

    </session_prompts>

    <!-- Progress Update Prompt -->
    <progress_update><![CDATA[
Session [NUMBER] complete. Please update the tracker:

```cypher
MATCH (tracker:TaskTracker {name: "Essay Refactor Progress"})
SET tracker.completed_tasks = tracker.completed_tasks + [TASKS_DONE],
    tracker.current_session = [NEXT_NUMBER],
    tracker.last_updated = datetime()

CREATE (handoff:RefactorHandoff {
    name: "Session_[NUMBER]_Complete",
    timestamp: datetime(),
    completed: [
        "Task 1 description",
        "Task 2 description"
    ],
    structures_added: [
        "Structure 1",
        "Structure 2"
    ],
    next_focus: "[Next essay/topic]",
    notes: "Any important observations"
})

RETURN tracker, handoff
```
    ]]></progress_update>

    <!-- Quick Structure Queries -->
    <useful_queries>
        <get_definitions><![CDATA[
// Get all formal definitions
MATCH (s:ConvQStructure)
WHERE s.formula IS NOT NULL
RETURN s.name, s.formula
ORDER BY s.name
LIMIT 20
        ]]></get_definitions>

        <get_proofs><![CDATA[
// Get formal proofs
MATCH (p:FormalProof)
WHERE p.theorem IS NOT NULL AND p.proof IS NOT NULL
RETURN p.theorem, p.proof
        ]]></get_proofs>

        <get_computations><![CDATA[
// Get computational examples
MATCH (c:ComputationalExample)
WHERE c.computation IS NOT NULL
RETURN c.title, c.computation
        ]]></get_computations>

        <get_area><![CDATA[
// Get specific area details
MATCH (area:ConvQArea {percentage: $percent})
MATCH (s:ConvQStructure)-[]-(area)
RETURN area, collect(s)
        ]]></get_area>
    </useful_queries>

    <!-- Essay Integration Checklist -->
    <integration_checklist>
        <for_each_essay>
            ☐ Loaded current essay version
            ☐ Identified sections needing enhancement
            ☐ Queried relevant structures from database
            ☐ Loaded appropriate XML artifacts
            ☐ Integrated mathematical content
            ☐ Maintained consistent notation
            ☐ Preserved essay narrative flow
            ☐ Added concrete examples
            ☐ Checked academic tone
            ☐ Updated progress tracker
        </for_each_essay>
    </integration_checklist>

</ConvQ_Session_Prompts>